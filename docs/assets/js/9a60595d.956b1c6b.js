"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5306],{21237:e=>{e.exports=JSON.parse('{"permalink":"/docs/blog/Job-Interview-Technical-Test-Preparation","editUrl":"https://github.com/MarkZither/mywyamblog/tree/main/docs/blog/Job-Interview-Technical-Test-Preparation.md","source":"@site/blog/Job-Interview-Technical-Test-Preparation.md","title":"Job Interview Technical Test Preparation","description":"docs.microsoft.com  Apply to a controller action by specifying it in the signature public IActionResult EncodedName([ModelBinder(typeof(Base64StringBinder))] string name).  Apply to a model using [ModelBinder(BinderType = typeof(AuthorEntityBinder))]  and register in startup.cs","date":"2017-11-04T00:00:00.000Z","tags":[{"inline":false,"label":"ASP.NET Core","permalink":"/docs/blog/tags/aspnet-core","description":"Microsoft ASP.NET Core framework"},{"inline":true,"label":"Custom Model Binding","permalink":"/docs/blog/tags/custom-model-binding"},{"inline":true,"label":"CQRS","permalink":"/docs/blog/tags/cqrs"},{"inline":true,"label":"Azure Service Bus","permalink":"/docs/blog/tags/azure-service-bus"},{"inline":true,"label":"AMQP","permalink":"/docs/blog/tags/amqp"}],"readingTime":1.79,"hasTruncateMarker":false,"authors":[{"name":"Mark Burton","title":"Software Engineer & Technical Writer","url":"https://github.com/MarkZither","imageURL":"https://github.com/MarkZither.png","key":"mark-burton","page":null}],"frontMatter":{"title":"Job Interview Technical Test Preparation","authors":["mark-burton"],"date":"2017-11-04","tags":["ASP.NET Core","Custom Model Binding","CQRS","Azure Service Bus","AMQP"]},"unlisted":false,"prevItem":{"title":"Resolving System.NotSupportedException No data is available for encoding 850 in .net Core","permalink":"/docs/blog/NotSupportedException exception using Encoding in .net core"},"nextItem":{"title":"NUnit 3 Tests Are Not Showing In Visual Studio Test Explorer","permalink":"/docs/blog/Nunit-Tests-Not-Showing-In-Test-Explorer"}}')},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(96540);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}},82354:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var r=n(21237),i=n(74848),o=n(28453);const s={title:"Job Interview Technical Test Preparation",authors:["mark-burton"],date:"2017-11-04",tags:["ASP.NET Core","Custom Model Binding","CQRS","Azure Service Bus","AMQP"]},a="ASP.NET MVC Custom Model Binding",c={authorsImageUrls:[void 0]},l=[{value:"Deserialise",id:"deserialise",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https:/docs.microsoft.comen-usaspnetcoremvcadvancedcustom-model-binding",children:"docs.microsoft.com"}),"  Apply to a controller action by specifying it in the signature ",(0,i.jsx)(t.code,{children:"public IActionResult EncodedName([ModelBinder(typeof(Base64StringBinder))] string name)"}),".  Apply to a model using ",(0,i.jsx)(t.code,{children:"[ModelBinder(BinderType = typeof(AuthorEntityBinder))]"}),"  and register in startup.cs"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:"public void ConfigureServices(IServiceCollection services)  \\\\\\{  services.AddMvc(options =>  \\{  Insert at the top so this gets used before default binder  options.ModelBinderProviders.Insert(0, new AuthorEntityBinderProvider());  \\\\});  }\n```  using a [model binder provider](https:/github.comaspnetDocstreemasteraspnetcoremvcadvancedcustom-model-bindingsampleCustomModelBindingSample)  ``` csharp\npublic class AuthorEntityBinderProvider : IModelBinderProvider  \\\\\\{  if (context.Metadata.ModelType == typeof(Author))  \\{  return new BinderTypeModelBinder(typeof(AuthorEntityBinder));  \\\\}  return null;  }\n```  ## Decode base64 string\n``` csharp  string decodedJson = Encoding.UTF8.GetString(Convert.FromBase64String(value));\n"})}),"\n",(0,i.jsx)(t.h2,{id:"deserialise",children:"Deserialise"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https:/www.newtonsoft.comjsonhelphtmlT_Newtonsoft_Json_JsonConvert.htm",children:"json convert"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:'1 Product product = new Product();  2  3 product.Name = "Apple";  4 product.ExpiryDate = new DateTime(2008, 12, 28);  5 product.Price = 3.99M;  6 product.Sizes = new string[] \\{ "Small", "Medium", "Large" };  7  8 string output = JsonConvert.SerializeObject(product);  9 /\\{',children:'10 //  "Name": "Apple",\n11 //  "ExpiryDate": "2008-12-28T00:00:00",\n12 //  "Price": 3.99,\n13 //  "Sizes": [\n14 //  "Small",\n15 //  "Medium",\n16 //  "Large"\n17 //  ]\n18 /\\}\n19\n20 Product deserializedProduct = JsonConvert.DeserializeObject<Product />(output);\n'})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https:/msdn.microsoft.comen-uslibrarywindowsappssystem.runtime.serialization.json.datacontractjsonserializer(v=vs.105).aspx",children:"without netwonsoft"}),"\n",(0,i.jsx)(t.code,{children:'csharp  [DataContract]  public class Product  \\\\\\{  [DataMember]  public string Name \\{ get; set; \\\\}  [DataMember]  public DateTime ExpiryDate \\\\{ get; set; \\}  }  public static string WriteFromObject()  \\\\{  Product user = new Product("Bob", DateTime.Now);  MemoryStream ms = new MemoryStream();  Serializer the User object to the stream.  DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(Product));  ser.WriteObject(ms, product);  byte[] json = ms.ToArray();  ms.Close();  return Encoding.UTF8.GetString(json, 0, json.Length);  \\}  public static User ReadToObject(string json)  \\\\{  Product deserializedProduct = new Product();  MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(json));  DataContractJsonSerializer ser = new DataContractJsonSerializer(deserializedUser.GetType());  deserializedUser = ser.ReadObject(ms) as Product;  \\} '}),"  ##As a action filter\ndecorate the controller action with [DecodingFilter]"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:'internal class DecodingFilterAttribute : Attribute, IActionFilter  \\{  public void OnActionExecuting(ActionExecutingContext context)  {  object param;  if (context.ActionArguments.TryGetValue("name", out param))  {  context.ActionArguments["name"] = Encoding.UTF8.GetString(Convert.FromBase64String(param.ToString()));  \\}  else  \\{  context.ActionArguments.Add("name", "I come from action filter");  }  }  }',children:"```  #CQRS\n[Martin Fowler - Command Query Responsibility Segregation](https:/www.martinfowler.comblikiCQRS.html)  #Message queues  ##AMQP\n[Azure Service Bus .NET Standard client library ](https:/www.nuget.orgpackagesMicrosoft.Azure.ServiceBus)\n[Using Service Bus from .NET with AMQP 1.0](https:/docs.microsoft.comen-usazureservice-bus-messagingservice-bus-amqp-dotnet)  Void - Action<string /> prints = x => \\\\{ Debug.WriteLine(x); \\};  Returns - Func&lt;int, int, int&gt; add = (x, y) => \\\\{ return x + y; \\};\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);