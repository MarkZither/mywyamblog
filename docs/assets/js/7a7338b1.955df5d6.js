"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[987],{28453:(e,t,i)=>{i.d(t,{R:()=>n,x:()=>a});var o=i(96540);const r={},s=o.createContext(r);function n(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),o.createElement(s.Provider,{value:t},e.children)}},29493:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var o=i(44813),r=i(74848),s=i(28453);const n={title:"Playing with Service Workers",authors:["mark-burton"],date:"2017-12-18",tags:["Service Workers","Notifications API","Push API","PWA","Progressive Web Apps","VAPID","CORS"]},a="Service workers, Push API, Notifications API and PWAs",c={authorsImageUrls:[void 0]},l=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["This will not work for you as service workers are not supported ## Location of the serviceworker.js file and scope matters\nI started with the sw.js file in the assetsscripts folder with the rest of the script files, but calls to ",(0,r.jsx)(t.code,{children:"navigator.serviceWorker.getRegistration()"})," were never returning, this stackoverflow thread explains the issue.\n",(0,r.jsx)(t.a,{href:"https:/stackoverflow.comquestions29874068navigator-serviceworker-is-never-ready",children:"Service Worker is never ready"}),".  Maybe this is the proper way  ```javascript\n\\{  navigator.serviceWorker.register('sw.js', {  scope: '.'  \\}"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-##",metastring:"Subscribe to notifications",children:'<div id="dashboard-controls" /><div /><button disabled="disabled" id="subscribe" />Subscribe for Push Notifications<button />  <button disabled="disabled" id="unsubscribe" />Unsubscribe from Push Notifications<button />  <<br /><<hr />  <label for="topic" />Topic:<label /><<input type="text" id="topic" size="32" maxlength="32" />  <label for="urgency" />Urgency:<label />  <select id="urgency" />  <option value="VeryLow" />Very Low<option />  <option value="Low" />Low<option />  <option value="Normal" selected="selected" />Normal<option />  <option value="High" />High<option />  <select /><<br />  <<input id="notification" size="65" />  <button id="send" />Send Push Notification<button />\n<div />  <<hr />\n<div id="dashboard-console" /><div /><label />Log:<label />  <button id="clear" style="position: relative; top: 3px;" />Clear&lt;button>\n<div />  ##  Building Progressive Web Apps with Chris Love\nGreat explaination of Service Workers and further reading and [offer](https:/love2dev.comdnrpwa) for Chris\' course on this episode of\n[DotNetRocks](https:/dotnetrocks.com?show=1509).  [PWA Builder](http:/www.pwabuilder.comgenerator)  ## CORS\nAs the blog is a static site and the backend is hosted in azure it is neccessary  setup CORS using one of the examples here[Enabling Cross-Origin Requests (CORS)](https:/docs.microsoft.comen-usaspnetcoresecuritycors)  don\'t forget to do the CORS section in Azure if you are using that.<<button id="clear" style="position: relative; top: 3px;"&gt;Clear&lt;button> />\n\n<script src="imgjspush-notifications.js" /><script />\n<script />  window.addEventListener(\'load\', function() \\\\{  // Registration was successful  console.log(\'PAGE: Get Notification permission\');  askPermission();  setTimeout(notify, 2000);  \\});  function notify()\\\\\\{  var title = \'Welcome to the blog.\';  var body = \'Enjoy this post about service workers and the push and notification APIs.\';  var icon = \'https:/noknok.plimagesfavico.png\';  var tag = \'simple-push-demo-notification-tag\';\nif (Notification.permission == \'granted\') \\{  navigator.serviceWorker.getRegistration().then(function(reg) {  reg.showNotification(title, {  body: body,  icon: icon,  tag: tag  \\\\})  });  }\n}  function askPermission() \\\\\\{  return new Promise(function(resolve, reject) \\{  const permissionResult = Notification.requestPermission(function(result) {  resolve(result);  \\\\});  if (permissionResult) \\\\{  permissionResult.then(resolve, reject);  \\}  })  .then(function(permissionResult) \\\\\\{  if (permissionResult !== \'granted\') \\{  throw new Error(\'We weren\\\'t granted permission.\');  \\\\}  });\n}\n</script&gt;\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},44813:e=>{e.exports=JSON.parse('{"permalink":"/docs/blog/Playing-with-Service-Workers","editUrl":"https://github.com/MarkZither/mywyamblog/tree/main/docs/blog/Playing-with-Service-Workers.md","source":"@site/blog/Playing-with-Service-Workers.md","title":"Playing with Service Workers","description":"This will not work for you as service workers are not supported ## Location of the serviceworker.js file and scope matters","date":"2017-12-18T00:00:00.000Z","tags":[{"inline":true,"label":"Service Workers","permalink":"/docs/blog/tags/service-workers"},{"inline":true,"label":"Notifications API","permalink":"/docs/blog/tags/notifications-api"},{"inline":true,"label":"Push API","permalink":"/docs/blog/tags/push-api"},{"inline":true,"label":"PWA","permalink":"/docs/blog/tags/pwa"},{"inline":true,"label":"Progressive Web Apps","permalink":"/docs/blog/tags/progressive-web-apps"},{"inline":true,"label":"VAPID","permalink":"/docs/blog/tags/vapid"},{"inline":true,"label":"CORS","permalink":"/docs/blog/tags/cors"}],"readingTime":1.91,"hasTruncateMarker":false,"authors":[{"name":"Mark Burton","title":"Software Engineer & Technical Writer","url":"https://github.com/MarkZither","imageURL":"https://github.com/MarkZither.png","key":"mark-burton","page":null}],"frontMatter":{"title":"Playing with Service Workers","authors":["mark-burton"],"date":"2017-12-18","tags":["Service Workers","Notifications API","Push API","PWA","Progressive Web Apps","VAPID","CORS"]},"unlisted":false,"prevItem":{"title":"First Post","permalink":"/docs/blog/miniblog clone"},"nextItem":{"title":"Resolving System.NotSupportedException No data is available for encoding 850 in .net Core","permalink":"/docs/blog/NotSupportedException exception using Encoding in .net core"}}')}}]);