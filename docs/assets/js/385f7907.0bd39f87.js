"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1792],{14699:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>n,toc:()=>h});var n=o(91562),s=o(74848),i=o(28453);const r={title:"Try Hack Me, Hacking with PowerShell",authors:["mark-burton"],tags:["tryhackme","powershell"],description:"Learn the basics of PowerShell and PowerShell Scripting",date:"2023-06-19"},a=void 0,l={authorsImageUrls:[void 0]},h=[{value:"Hacking with PowerShell  This is a Try Hack Me premium room so to access it you will need a subscription, if you don&#39;t have one go get one with my Referral Link  ### Task 1 -  Objectives  Start the machine, that&#39;s it.  ### Task 2 - What is Powershell?  PowerShell verbs  #### Question 1  What is the command to get a new object?  ##### Notes  This confused me because the command is not a real command, just an example of how command naming works in PowerShell.  Running the command in PowerShell results in  ``` powershell",id:"hacking-with-powershell--this-is-a-try-hack-me-premium-room-so-to-access-it-you-will-need-a-subscription-if-you-dont-have-one-go-get-one-with-my-referral-link---task-1----objectives--start-the-machine-thats-it---task-2---what-is-powershell--powershell-verbs---question-1--what-is-the-command-to-get-a-new-object---notes--this-confused-me-because-the-command-is-not-a-real-command-just-an-example-of-how-command-naming-works-in-powershell--running-the-command-in-powershell-results-in---powershell",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.h2,{id:"hacking-with-powershell--this-is-a-try-hack-me-premium-room-so-to-access-it-you-will-need-a-subscription-if-you-dont-have-one-go-get-one-with-my-referral-link---task-1----objectives--start-the-machine-thats-it---task-2---what-is-powershell--powershell-verbs---question-1--what-is-the-command-to-get-a-new-object---notes--this-confused-me-because-the-command-is-not-a-real-command-just-an-example-of-how-command-naming-works-in-powershell--running-the-command-in-powershell-results-in---powershell",children:["Hacking with PowerShell  This is a Try Hack Me premium room so to access it you will need a subscription, if you don't have one go get one with my ",(0,s.jsx)(t.a,{href:"https:/tryhackme.comsignup?referrer=638ca30a6675850049e4858e",children:"Referral Link"}),"  ### Task 1 -  Objectives  Start the machine, that's it.  ### Task 2 - What is Powershell?  ",(0,s.jsx)(t.a,{href:"https:/docs.microsoft.comen-uspowershellscriptingdevelopercmdletapproved-verbs-for-windows-powershell-commands?view=powershell-7",children:"PowerShell verbs"}),"  #### Question 1  What is the command to get a new object?  ##### Notes  This confused me because the command is not a real command, just an example of how command naming works in PowerShell.  Running the command in PowerShell results in  ``` powershell"]}),"\n",(0,s.jsx)(t.p,{children:"PS C:\\Users\\mburton> ???-???\n???-???: The term '???-???' is not recognized as a name of a cmdlet, function, script file, or executable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-####",metastring:"Answer",children:'> Get-New [Reveal Answer](#) ### Task 3 - Basic Powershell Commands  [PowerShell verbs](https:/docs.microsoft.comen-uspowershellscriptingdevelopercmdletapproved-verbs-for-windows-powershell-commands?view=powershell-7)  #### Question 1  What is the location of the file "interesting-file.txt"  ##### Notes  The Microsoft Scripting Blog has lots of useful articles on working with PowerShell to answer this question you can read "[Use Windows PowerShell to search for files](https:/devblogs.microsoft.comscriptinguse-windows-powershell-to-search-for-files)".  ``` powershell\nGet-Childitem \u2013Path C:\\ -Include interesting-file.txt -Recurse -ErrorAction SilentlyContinue  Directory: C:\\??????? ?????  Mode  LastWriteTime  Length Name\n----  -------------  ------ ----\n-a----  103/2019  11:38 PM  23 interesting-file.txt\n```  #### Answer\n> C:\\Program Files [Reveal Answer](#) #### Question 2  Specify the contents of this file  ##### Notes  ``` powershell\nGet-Content \'C:\\Program Files\\interesting-file.txt\'\n```  #### Answer\n> notsointerestingcontent [Reveal Answer](#) #### Question 3  How many cmdlets are installed on the system(only cmdlets, not functions and aliases)?  ##### Notes  The task intro shows that `Get-Command` can be used to get this information, but it returns `Cmdlets`, `Functions` and `Alias`, so how to filter only `Cmdlets`?  First check the help, examples and use the [online help](https:/learn.microsoft.comen-gbpowershellmodulemicrosoft.powershell.coreget-command?view=powershell-7.3&viewFallbackFrom=powershell-6) if it is not available locally  ``` powershell\n> Get-Help Get-Command  NAME  Get-Command  SYNTAX  Get-Command [[-ArgumentList] &lt;Object[]>] [-Verb <string[] />] [-Noun <string[] />] [-Module <string[] />]  [-FullyQualifiedModule <ModuleSpecification[] />] [-TotalCount <int />] [-Syntax] [-ShowCommandInfo] [-All]  [-ListImported] [-ParameterName <string[] />] [-ParameterType <PSTypeName[] />]  [<CommonParameters />]  Get-Command [[-Name] <string[] />] [[-ArgumentList] <Object[] />] [-Module <string[] />] [-FullyQualifiedModule  <ModuleSpecification[] />] [-CommandType \\\\{Alias | Function | Filter | Cmdlet | ExternalScript | Application | Script  | Workflow | Configuration | All\\}] [-TotalCount <int />] [-Syntax] [-ShowCommandInfo] [-All] [-ListImported]  [-ParameterName <string[] />] [-ParameterType <PSTypeName[] />]  [<CommonParameters />]  ALIASES  gcm  REMARKS  Get-Help cannot find the Help files for this cmdlet on this computer. It is displaying only partial help.  -- To download and install Help files for the module that includes this cmdlet, use Update-Help.  -- To view the Help topic for this cmdlet online, type: "Get-Help Get-Command -Online" or  go to https:/go.microsoft.comfwlink?LinkID=113309.\n```  One of the parameters is `-CommandType` which accepts specific values from a list including `Cmdlet` so last step is to get a count, which can be done by piping it to `Measure-Object`.  ``` powershell\n&gt; Get-Command -Type cmdlet | Measure-Object\n> ```  #### Answer\n> 9673 [Reveal Answer](#) #### Question 4  Get the MD5 hash of interesting-file.txt  ##### Notes  ``` powershell\n> Get-Help Get-FileHash  NAME  Get-FileHash  SYNTAX  Get-FileHash [-Path] &lt;string[]> [-Algorithm \\\\{SHA1 | SHA256 | SHA384 | SHA512 | MACTripleDES | MD5 | RIPEMD160\\}]  [<CommonParameters />]  Get-FileHash -LiteralPath <string[] /> [-Algorithm \\\\{SHA1 | SHA256 | SHA384 | SHA512 | MACTripleDES | MD5 |  RIPEMD160\\}]  [<CommonParameters />]  Get-FileHash -InputStream <Stream /> [-Algorithm \\\\{SHA1 | SHA256 | SHA384 | SHA512 | MACTripleDES | MD5 | RIPEMD160\\}]  [<CommonParameters />]\n```  ``` powershell\n&gt; Get-FileHash \'C:\\Program Files\\interesting-file.txt -Algorithm MD5  > ```  #### Answer\n> 49A586A2A9456226F8A1B4CEC6FAB329 [Reveal Answer](#) #### Question 5  What is the command to get the current working directory?  #### Answer\n> Get-Location [Reveal Answer](#) #### Question 6  Does the path "C:\\Users\\Administrator\\Documents\\Passwords" Exist (YN)?  ##### Notes  ``` powershell\n> Test-Path \'C:\\Users\\Administrator\\Documents\\Passwords\'\n> True|False\n```  #### Answer\n> N [Reveal Answer](#) #### Question 7  What command would you use to make a request to a web server?  #### Answer\n> Invoke-WebRequest [Reveal Answer](#) #### Question 8  Base64 decode the file b64.txt on Windows.  ##### Notes  Nice explanation by Joshua Wright on the [Sans Blog - Month of PowerShell](https:/www.sans.orgblogmonth-of-powershell-profile-hack-base64-encoding-decoding), including adding the command to your profile so it can be called easily without having to remember the whole command.  ``` powershell\n> $base64 = Get-Content .\\b64.txt\n> [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($base64))\n> this is the flag - ????????????????????????\nthe rest is garbage\nthe rest is garbage\nthe rest is garbage\nthe rest is garbage\nthe rest is garbage\nthe rest is garbage\n```  #### Answer\n> ihopeyoudidthisonwindows [Reveal Answer](#) ### Task 4 - Enumeration  The first step when you have gained initial access to any machine would be to enumerate. We\'ll be enumerating the following:  * users\n* basic networking information\n* file permissions\n* registry permissions\n* scheduled and running tasks\n* insecure files  Your task will be to answer the following questions to enumerate the machine using Powershell commands!  #### Question 1  How many users are there on the machine?  ##### Notes  ``` powershell\n> Get-LocalUser\n> ```  #### Answer\n> ihopeyoudidthisonwindows [Reveal Answer](#) \n'})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(96540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}},91562:e=>{e.exports=JSON.parse('{"permalink":"/docs/blog/2023/06/19/tryhackme-hacking-with-powershell","editUrl":"https://github.com/MarkZither/mywyamblog/tree/main/docs/blog/2023-06-19-tryhackme-hacking-with-powershell.md","source":"@site/blog/2023-06-19-tryhackme-hacking-with-powershell.md","title":"Try Hack Me, Hacking with PowerShell","description":"Learn the basics of PowerShell and PowerShell Scripting","date":"2023-06-19T00:00:00.000Z","tags":[{"inline":true,"label":"tryhackme","permalink":"/docs/blog/tags/tryhackme"},{"inline":true,"label":"powershell","permalink":"/docs/blog/tags/powershell"}],"readingTime":4.07,"hasTruncateMarker":false,"authors":[{"name":"Mark Burton","title":"Software Engineer & Technical Writer","url":"https://github.com/MarkZither","imageURL":"https://github.com/MarkZither.png","key":"mark-burton","page":null}],"frontMatter":{"title":"Try Hack Me, Hacking with PowerShell","authors":["mark-burton"],"tags":["tryhackme","powershell"],"description":"Learn the basics of PowerShell and PowerShell Scripting","date":"2023-06-19"},"unlisted":false,"prevItem":{"title":"Try Hack Me, Redline","permalink":"/docs/blog/2023/06/24/tryhackme-redline"},"nextItem":{"title":"Try Hack Me, OpenVAS","permalink":"/docs/blog/2023/06/19/tryhackme-openvas"}}')}}]);