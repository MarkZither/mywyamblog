"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6477],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(96540);const o={},i=r.createContext(o);function a(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}},35566:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var r=n(90502),o=n(74848),i=n(28453);const a={title:"Running ASP.NET Core on a RaspberryPi 2 with Nginx",authors:["mark-burton"],date:"2017-02-21",tags:["ASP.NET Core","RaspberryPi","Nginx"]},s="Running ASP.NET Core on a RaspberryPi 2 with Nginx  I followed the instructions from Get Started and docs.microsoft.com, and found that some additional configuration was required.  # prerequisites  the prerequisites are required or you will get an error like:  ```perl",l={authorsImageUrls:[void 0]},c=[];function u(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Failed to load \u2592\u2592\u2592, error: libunwind.so.8: cannot open shared object file: No such file or directory Failed to bind to CoreCLR at /varwwwPublishOutputlibcoreclr.so'"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-#",metastring:"Permissions",children:'`chmod 744?`  # Tell Kestrel to listen  If you are running headless you will need Kestrel to be listening for external requests to confirm the app is running, this can be done using the `ASPNETCORE_URLS environment variable`  ```perl  ASPNETCORE_URLS="http:/*:5000" dotnet Your.App.dll\n```  # Create the service file\nadd a symlink for dotnet to limit the changes to the service file\n```perl\nsudo ln -s /optdotnetdotnet /usrbindotnet\n```  # Configuring SSL\nRather than building nginx from source to get SSL I used nginx-core.\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},90502:e=>{e.exports=JSON.parse('{"permalink":"/docs/blog/Running ASP.NET Core on a RaspberryPi 2 with Nginx","editUrl":"https://github.com/MarkZither/mywyamblog/tree/main/docs/blog/Running ASP.NET Core on a RaspberryPi 2 with Nginx.md","source":"@site/blog/Running ASP.NET Core on a RaspberryPi 2 with Nginx.md","title":"Running ASP.NET Core on a RaspberryPi 2 with Nginx","description":"Failed to load \u2592\u2592\u2592, error cannot open shared object file: No such file or directory Failed to bind to CoreCLR at /varwwwPublishOutputlibcoreclr.so\'","date":"2017-02-21T00:00:00.000Z","tags":[{"inline":false,"label":"ASP.NET Core","permalink":"/docs/blog/tags/aspnet-core","description":"Microsoft ASP.NET Core framework"},{"inline":true,"label":"RaspberryPi","permalink":"/docs/blog/tags/raspberry-pi"},{"inline":true,"label":"Nginx","permalink":"/docs/blog/tags/nginx"}],"readingTime":0.52,"hasTruncateMarker":false,"authors":[{"name":"Mark Burton","title":"Software Engineer & Technical Writer","url":"https://github.com/MarkZither","imageURL":"https://github.com/MarkZither.png","key":"mark-burton","page":null}],"frontMatter":{"title":"Running ASP.NET Core on a RaspberryPi 2 with Nginx","authors":["mark-burton"],"date":"2017-02-21","tags":["ASP.NET Core","RaspberryPi","Nginx"]},"unlisted":false,"prevItem":{"title":"NUnit 3 Tests Are Not Showing In Visual Studio Test Explorer","permalink":"/docs/blog/Nunit-Tests-Not-Showing-In-Test-Explorer"},"nextItem":{"title":"Setting up a Raspberry Pi NGINX PHP MySQL LEMP Stack","permalink":"/docs/blog/Setting-Raspberry-Pi-NGINX-PHP-MySQL-LEMP-Stack"}}')}}]);